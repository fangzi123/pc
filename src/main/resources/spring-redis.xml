<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="
            http://www.springframework.org/schema/beans 
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/tx 
            http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-3.0.xsd
               ">

    <!-- scanner redis properties -->
    <context:property-placeholder location="classpath:redis.properties"
        ignore-unresolvable="true" />

    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${redis.maxIdle}" />
        <!-- <property name="maxActive" value="${redis.maxActive}" /> -->
        <!-- <property name="maxWait" value="${redis.maxWait}" /> -->
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />
    </bean>

    <bean id="connectionFactory"
        class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
        p:host-name="${redis.host}" p:port="${redis.port}" p:password="${redis.pass}"
        p:pool-config-ref="poolConfig" />

    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="connectionFactory" />
        <property name="KeySerializer">
            <bean
                class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
        </property>
        <property name="ValueSerializer">
            <bean
                class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
        </property>
    </bean>

    <bean id="jedisUtil" class="com.micro.rent.pc.util.JedisUtil"
        init-method="init">
        <property name="redisTemplate" ref="redisTemplate" />
    </bean>
    
    

<!--     <bean id="messageListener" class="com.jiezhu.pms.service.redis.RedisFilterChain">   -->
       
<!--     </bean>  -->
    
<!--      <bean id="redisContainer" class="org.springframework.data.redis.listener.RedisMessageListenerContainer">   -->
<!--         <property name="connectionFactory" ref="connectionFactory"/>   -->
<!--         <property name="messageListeners">   -->
<!--             map of listeners and their associated topics (channels or/and patterns)   -->
<!--             <map>   -->
<!--                 <entry key-ref="messageListener">   -->
<!--                     <bean class="org.springframework.data.redis.listener.ChannelTopic">   -->
<!--                         <constructor-arg value="filterChain" />     -->
<!--                     </bean>   -->
<!--                 </entry>   -->
<!--             </map>   -->
<!--         </property>   -->
<!--     </bean>   -->

</beans>