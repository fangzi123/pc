<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.micro.rent.pc.dao.BrandDao">

    <select id="queryRecommendedBrands" parameterType="String"
        resultType="BrandVo">
        SELECT
        B. ID,
        B. NAME,
        B.description,
        logo,
        tagline,
        B.FLAG,
        RANK,
        (
        SELECT
        MIN(pic_path)AS pic
        FROM
        brand2pic
        WHERE
        brand_id = B. ID
        )
        FROM
        brand B
        JOIN address ON address_id = address. ID
        LEFT JOIN rank_group RG ON rank_group_id = RG. ID
        WHERE
        get_bit(B.flag,0)=1 
        and get_bit(B.flag,1)=1
        and city_id=#{region}
        ORDER BY
        RANK desc
    </select>
    
    <select id="queryById" parameterType="Integer"
            resultType="Brand">
        SELECT *
        from brand
        WHERE 
        get_bit(flag, 0)='1'
        and id=#{id}
    </select>
    
    <resultMap id="BaseResultMap" type="com.micro.rent.pc.entity.Brand">
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="name" property="name" jdbcType="CHAR" />
        <result column="address_id" property="addressId" jdbcType="BIGINT" />
        <result column="description" property="description" jdbcType="VARCHAR" />
        <result column="flag" property="flag" jdbcType="BIT" />
        <result column="rank_group_id" property="rankGroupId" jdbcType="BIGINT" />
        <result column="logo" property="logo" jdbcType="VARCHAR" />
        <result column="tagline" property="tagline" jdbcType="VARCHAR" />
    </resultMap>
    <sql id="Base_Column_List">
        id, name, address_id, description, flag, rank_group_id, logo, tagline
    </sql>
    
    <sql id="Base_Column_List_Alias">
        b.id, b.name, b.address_id, b.description, b.flag, b.rank_group_id, b.logo, b.tagline
    </sql>


    <select id="findBrandById" parameterType="java.util.Map" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/>
        from brand
        where id=#{brandId}    
    </select>
    
    <resultMap type="com.micro.rent.pc.entity.vo.BrandVo" id="findNearbyBrandByAddressResultMap" extends="BaseResultMap">
    </resultMap>
    
    <select id="findNearbyBrandByAddress" parameterType="java.util.Map" resultMap="findNearbyBrandByAddressResultMap">
        select distinct <include refid="Base_Column_List_Alias"/>
        from address a, brand b, branch d where 
        a.id = d.address_id and b.id=d.brand_id
        and a.point @circle'((${x},${y}),${distinct})'
        limit 4
    </select>
</mapper>
